[EC2Tags]
usecase: dev-jenkins-ucs5.0

[Global]
logfile: autotest-201-ucsschool-singleserver-s4.log

# ucs-kt-get kvm settings
kvm_server: [ENV:KVM_BUILD_SERVER]
kvm_user: [ENV:KVM_USER]
kvm_extra_label: autotest-201-ucsschool-singleserver-[ENV:KVM_LABEL_SUFFIX]-[ENV:UCS_VERSION]

kvm_template: [ENV:KVM_TEMPLATE]
kvm_ucsversion: [ENV:KVM_UCSVERSION]
kvm_architecture: amd64
kvm_memory: 4G
kvm_vcpus: 2

kvm_dhcp: true

recover: 10

environment:
 UCS_VERSION=[ENV:UCS_VERSION]
 UCS_TEST_RUN=[ENV:UCS_TEST_RUN]
 RELEASE_UPDATE=[ENV:RELEASE_UPDATE]
 ERRATA_UPDATE=[ENV:ERRATA_UPDATE]
 TARGET_VERSION=[ENV:TARGET_VERSION]
 JENKINS_WS=[ENV:JOB_URL]
 UCSSCHOOL_RELEASE=[ENV:UCSSCHOOL_RELEASE]
 JOB_NAME=[ENV:JOB_NAME]
 SCOPE=[ENV:SCOPE]

[master201-single-s4]
profile:
 hostname="master201"
 domainname="autotest201.test"
 windows/domain="AUTOTEST201"
 ldap/base="dc=autotest201,dc=test"
 root_password="univention"
 locale/default="de_DE.UTF-8:UTF-8"
 packages_install="univention-s4-connector univention-samba4 univention-self-service-master"
 packages_remove=""
 server/role="domaincontroller_master"
command1:
 # Experiment: Use all memory of server
 SERVER id=$(virsh domid "[SELF_KVM_NAME]") && [ -n "${id#-}" ] && virsh numatune --domain "$id" --mode preferred --live --nodeset 0-1 || :
 # Workaround for Bug 45950
 echo 'APT::Get::AllowUnauthenticated "true";' >> /etc/apt/apt.conf.d/00jenkinsworkaround
 . utils.sh && basic_setup
 . utils.sh && add_extra_apt_scope
 . utils.sh && rotate_logfiles
 ucr set ldap/database/mdb/envflags=nosync connector/debug/level=2 umc/server/debug/level=4 umc/module/debug/level=4 connector/s4/retryrejected=2
 # Disable samba cron, see Bug #36728
 # ucr set samba4/backup/cron="#0 3 * * *"
command2:
 # get current univention-errata-level package:
 . utils.sh && RELEASE_UPDATE=public jenkins_updates
 # update as instructed in Jenkins:
 . utils.sh && jenkins_updates && touch UCS_UPDATED
 univention-app info
 . utils.sh && assert_version "[ENV:TARGET_VERSION]"
 . utils.sh && run_setup_join
 . utils.sh && do_reboot
 LOCAL sleep 120
 . utils.sh && wait_for_reboot
command3:
 . utils.sh && import_license
command4:
 . utils.sh && set_administrator_dn_for_ucs_test; set_administrator_password_for_ucs_test univention
 . utils.sh && install_ucsschool
 . utils.sh && run_join_scripts
 univention-app info
command5:
 . utils.sh && prevent_ucstest_on_fail /root/schoolinstaller.py -uAdministrator -p univention -o School1 -S -s 4
command6:
 . utils.sh && run_join_scripts
 univention-app info
 . utils.sh && assert_version "[ENV:TARGET_VERSION]"
command7:
 univention-app info
 . utils.sh && wait_for_reboot
command8:
 . utils.sh && install_ucs_test
 . utils.sh && install_apps_test_packages ucsschool
 univention-install -y --assume-yes ucs-school-roleshares
 univention-install -y --assume-yes ucs-school-radius-802.1x
 univention-install -y --assume-yes ucs-school-selfservice-support
 univention-install -y --assume-yes ucs-school-import-lusd ucs-test-ucsschool-importer-lusd
 . utils.sh && run_join_scripts
command9:
 # Wait for possible postruns from the run_join_scripts command
 sleep 60
 # run tests
 . utils.sh && monkeypatch
 . utils.sh && run_ucsschool_tests "[ENV:TEST_GROUP]"
command10:
 . utils.sh && prepare_results
 LOCAL utils/utils-local.sh ucsschool-fetch-results [SELF_IP]
files:
 ~/ec2/license/autotest201.ldif /root/
 utils/schoolinstaller.py /root/
 utils/utils.sh /root/
 ~/ec2/license/license.secret /etc/
 ~/ec2/scripts/activate-errata-test-scope.sh /root/
