[Global]
logfile: autotest.log

kvm_server: [ENV:KVM_BUILD_SERVER]
kvm_user: [ENV:KVM_USER]
kvm_extra_label: [ENV:JOB_BASE_NAME]-[ENV:UCS_VERSION]

kvm_operating_system: Others
kvm_template: [ENV:KVM_TEMPLATE]
kvm_ucsversion: [ENV:UCS_VERSION]
kvm_architecture: amd64
kvm_memory: 4G
kvm_vcpus: 4

kvm_dhcp: true

parallel: true
recover: 4

environment:
 UCS_VERSION=[ENV:UCS_VERSION]
 UCS_TEST_RUN=[ENV:UCS_TEST_RUN]
 RELEASE_UPDATE=[ENV:RELEASE_UPDATE]
 ERRATA_UPDATE=[ENV:ERRATA_UPDATE]
 TARGET_VERSION=[ENV:TARGET_VERSION]
 JENKINS_WS=[ENV:JOB_URL]
 UCSSCHOOL_RELEASE=[ENV:UCSSCHOOL_RELEASE]
 JOB_NAME=[ENV:JOB_NAME]
 KVM_BUILD_SERVER=[ENV:KVM_BUILD_SERVER]
 GUARDIAN_MANAGEMENT_IMAGE=[ENV:GUARDIAN_MANAGEMENT_IMAGE]
 GUARDIAN_MANAGEMENT_APPCENTER_VERSION=[ENV:GUARDIAN_MANAGEMENT_APPCENTER_VERSION]
 GUARDIAN_AUTHORIZATION_IMAGE=[ENV:GUARDIAN_AUTHORIZATION_IMAGE]
 GUARDIAN_AUTHORIZATION_APPCENTER_VERSION=[ENV:GUARDIAN_AUTHORIZATION_APPCENTER_VERSION]
 GUARDIAN_MANAGEMENT_UI_IMAGE=[ENV:GUARDIAN_MANAGEMENT_UI_IMAGE]
 GUARDIAN_MANAGEMENT_UI_APPCENTER_VERSION=[ENV:GUARDIAN_MANAGEMENT_UI_APPCENTER_VERSION]
 GUARDIAN_OPA_IMAGE=[ENV:GUARDIAN_OPA_IMAGE]
 UCS_TEST_APPCENTER=[ENV:UCS_TEST_APPCENTER]

[primary]
kvm_template: ucs-school-multiserver-primary
command1:
 . utils.sh && add_tech_key_authorized_keys
 . utils.sh && basic_setup
 . utils.sh && basic_setup_ucs_joined [SELF_IP]
 . utils.sh && rotate_logfiles
 . utils.sh && import_license 300000
 . utils.sh && wait_for_repo_server
 . utils.sh && activate_ucsschool_repositories
 . utils.sh && add_guardian_dev_repo
 . utils.sh && jenkins_updates
 . utils.sh && do_reboot
 LOCAL sleep 60
 . utils.sh && wait_for_reboot && wait_for_slapd
command2:
 . utils.sh && assert_join
 . utils.sh && assert_version "[ENV:TARGET_VERSION]"
 . utils.sh && assert_app_is_installed ucsschool
 . utils.sh && assert_packages ucs-school-multiserver
 # Guardian setup
 . utils.sh && install_apps_via_cmdline Administrator univention keycloak
 . utils.sh && switch_app_center
command3:
 # Guardian setup on backup
command4:
 # pass
command5:
 # run tests on backup
command6:
 . utils.sh && prepare_results
 LOCAL utils/utils-local.sh fetch-results [SELF_IP] [SELF]
files:
 ~/ec2/license/license.secret /etc/
 ~/ec2/scripts/activate-errata-test-scope.sh /root/

[backup1]
kvm_template: ucs-school-multiserver-backup1
command1:
 . utils.sh && add_tech_key_authorized_keys
 . utils.sh && basic_setup
 . utils.sh && basic_setup_ucs_joined [primary_IP]
 . utils.sh && rotate_logfiles
command2:
 . utils.sh && wait_for_repo_server
 . utils.sh && activate_ucsschool_repositories
 . utils.sh && add_guardian_dev_repo
 . utils.sh && jenkins_updates
 . utils.sh && run_join_scripts univention
 . utils.sh && do_reboot
 LOCAL sleep 60
 . utils.sh && wait_for_reboot && wait_for_slapd
command3:
 . utils.sh && assert_join
 . utils.sh && assert_version "[ENV:TARGET_VERSION]"
 . utils.sh && assert_app_is_installed ucsschool
 . utils.sh && assert_packages ucs-school-multiserver
 # Guardian setup
 . utils.sh && switch_app_center
 . ./guardian/install_guardian_from_branch.sh && install_guardian_management_api_from_branch "[ENV:GUARDIAN_MANAGEMENT_APPCENTER_VERSION]" "[ENV:GUARDIAN_MANAGEMENT_IMAGE]"
 . ./guardian/install_guardian_from_branch.sh && install_guardian_authorization_api_from_branch "[ENV:GUARDIAN_AUTHORIZATION_APPCENTER_VERSION]" "[ENV:GUARDIAN_AUTHORIZATION_IMAGE]" "[ENV:GUARDIAN_OPA_IMAGE]"
 . ./guardian/install_guardian_from_branch.sh && install_guardian_management_ui_from_branch "[ENV:GUARDIAN_MANAGEMENT_UI_APPCENTER_VERSION]" "[ENV:GUARDIAN_MANAGEMENT_UI_IMAGE]"
command4:
 # prepare keycloak M2M secret on the primary
command5:
 univention-app configure guardian-authorization-api
 univention-app restart guardian-authorization-api
 univention-app configure guardian-management-api
 univention-app restart guardian-management-api
 # tests
 univention-app dev-test --appcenter-server http://appcenter-test.software-univention.de guardian-authorization-api
 univention-app dev-test --appcenter-server http://appcenter-test.software-univention.de guardian-management-api
command6:
 . utils.sh && prepare_results
 LOCAL utils/utils-local.sh fetch-results [SELF_IP] [SELF]
files:
 ~/ec2/scripts/activate-errata-test-scope.sh /root/
