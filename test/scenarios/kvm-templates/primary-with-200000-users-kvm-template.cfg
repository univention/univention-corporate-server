[Global]
logfile: autotest.log

# scenario for for creating a ucs primary
# with 200.000 users and (some) groups

# ucs-kt-get kvm settings
kvm_server: [ENV:KVM_BUILD_SERVER]
kvm_user: [ENV:KVM_USER]
kvm_extra_label: primary-with-200000-kvm-templates-[ENV:UCS_VERSION]
kvm_operating_system: [ENV:KVM_OPERATING_SYSTEM]
kvm_template: [ENV:KVM_TEMPLATE]
kvm_ucsversion: [ENV:KVM_UCSVERSION]
kvm_architecture: amd64
kvm_memory: 8G
kvm_vcpus: 8

kvm_dhcp: true

parallel: true
recover: 7


environment:
 UCS_VERSION=[ENV:UCS_VERSION]
 UCS_TEST_RUN=[ENV:UCS_TEST_RUN]
 RELEASE_UPDATE=[ENV:RELEASE_UPDATE]
 ERRATA_UPDATE=[ENV:ERRATA_UPDATE]
 TARGET_VERSION=[ENV:TARGET_VERSION]
 JENKINS_WS=[ENV:JOB_URL]

[primary]
profile:
 hostname="primary"
 domainname="ucs.test"
 windows/domain="UCS"
 ldap/base="dc=ucs,dc=test"
 root_password="univention"
 locale/default="en_US.UTF-8:UTF-8"
 locale="en_US.UTF-8:UTF-8 de_DE.UTF-8:UTF-8"
 packages_install=""
 packages_remove=""
 server/role="domaincontroller_master"
command1:
 . utils.sh && basic_setup
 . utils.sh && add_tech_key_authorized_keys
 . utils.sh && upgrade_to_latest_patchlevel
 . utils.sh && assert_version "[ENV:TARGET_VERSION]"
 . utils.sh && run_setup_join
 . utils.sh && assert_join
 . utils.sh && import_license
 # some settings for setups with a big database
 . utils.sh && performance_template_settings
 ucr set ldap/database/mdb/envflags="nosync"
 ucr set listener/module/portal_groups/deactivate=yes
 service univention-directory-listener restart
 service slapd restart
command2:
 # backup join
command3:
 # create users/groups and test data cache
 service univention-directory-notifier stop
 ./create-users.py > /tmp/create.log
 . utils.sh && time create_and_copy_test_data_cache univention "[backup1_IP]"
 service univention-directory-notifier start
command4:
 # wait for replication
 . utils.sh && wait_for_replication "$(( 10 * 3600 ))" 60
 # create one more user to cleanup temporary objects
 udm users/user create --set username=dummy1 --set lastname=dummy1 --set password=univention || true
 udm users/user remove --dn "uid=dummy1,$(ucr get ldap/base)" || true
command5:
 # cleanup
 ucr unset listener/module/portal_groups/deactivate
 ucr unset ldap/database/mdb/envflags
 univention-portal update --reason "ldap:group"
 . utils.sh && cleanup_translog
 . utils.sh && rotate_logfiles
command6:
 . utils.sh && create_version_file_tmp_ucsver "[ENV:TESTING]"
 GET /tmp/ucs.ver ucs_[SELF].ver
 . base_appliance.sh && appliance_poweroff
 SSH_DISCONNECT
 SERVER id=$(virsh domid "[SELF_KVM_NAME]") && [ -n "${id#-}" ] && virsh event --domain "$id" --event lifecycle --timeout 120 --timestamp || :
 SOURCE ucs_[SELF].ver
 SERVER ucs-kt-put -C single -O Others -c "[SELF_KVM_NAME]" "[ucsver]_ucs-primary-with-200000-users_amd64" --remove-old-templates='[ENV:TARGET_VERSION]+e*_ucs-primary-with-200000-users_amd64.tar.gz' --keep-last-templates=1
command7:
 LOCAL rm -f ucs_[SELF].ver
files:
 ~/ec2/license/license.secret /etc/
 utils/create-users.py /root/

[backup1]
profile:
 hostname="backup1"
 domainname="ucs.test"
 windows/domain="UCS"
 ldap/base="dc=ucs,dc=test"
 root_password="univention"
 locale/default="en_US.UTF-8:UTF-8"
 locale="en_US.UTF-8:UTF-8 de_DE.UTF-8:UTF-8"
 server/role="domaincontroller_backup"
 nameserver=[primary_IP]
command1:
 # basic setup and primary "join"
 . utils.sh && basic_setup
 . utils.sh && add_tech_key_authorized_keys
 . utils.sh && upgrade_to_latest_patchlevel
 # some settings for setups with a big database
 . utils.sh && performance_template_settings
 ucr set ldap/database/mdb/envflags="nosync"
 ucr set listener/module/portal_groups/deactivate=yes
command2:
 # join
 . utils.sh && run_setup_join_on_non_master
 . utils.sh && assert_join
 . utils.sh && assert_version "[ENV:TARGET_VERSION]"
command3:
 # create users on primary
command4:
 # wait for replication
 . utils.sh && wait_for_replication "$(( 10 * 3600 ))" 60
command5:
 # cleanup
 ucr unset listener/module/portal_groups/deactivate
 ucr unset ldap/database/mdb/envflags
 univention-portal update --reason "ldap:group"
 . utils.sh && cleanup_translog
 . utils.sh && rotate_logfiles
command6:
 # create template
 . utils.sh && create_version_file_tmp_ucsver "[ENV:TESTING]"
 GET /tmp/ucs.ver ucs_[SELF].ver
 . base_appliance.sh && appliance_poweroff
 SSH_DISCONNECT
 SERVER id=$(virsh domid "[SELF_KVM_NAME]") && [ -n "${id#-}" ] && virsh event --domain "$id" --event lifecycle --timeout 120 --timestamp || :
 SOURCE ucs_[SELF].ver
 SERVER ucs-kt-put -C single -O Others -c "[SELF_KVM_NAME]" "[ucsver]_ucs-backup1-with-200000-users_amd64" --remove-old-templates='[ENV:TARGET_VERSION]+e*_ucs-backup1-with-200000-users_amd64.tar.gz' --keep-last-templates=1
command7:
 # fallback
 LOCAL rm -f ucs_[SELF].ver
