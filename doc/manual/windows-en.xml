<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE chapter [
	<!ENTITY % extensions SYSTEM "../stylesheets/macros.ent" >
	<!ENTITY % DocBookDTD PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
	<!ENTITY % entities SYSTEM "../stylesheets/macros-en.ent" >
	%extensions;
	%DocBookDTD;
	%entities;
]>
<chapter id="windows:Services_for_Windows">
  <title>Services for Windows</title>
  <section id="windows:general">
	<title>Introduction</title>
	<para>
	  UCS can offer Active Directory (AD) services, be a member of an Active Directory domain or synchronize objects between Active Directory domains and a UCS domain.
	</para>

	<para>
	  For the purposes of Windows systems, UCS can assume the tasks of Windows server systems:
	</para>

	<itemizedlist>
	  <listitem><simpara>
		Domain controller function / authentication services
	  </simpara></listitem>

	  <listitem><simpara>
		File services
	  </simpara></listitem>

	  <listitem><simpara>
		Print services
	  </simpara></listitem>
	</itemizedlist>

	<para>
	  In UCS all these services are provided by Samba.
	</para>

	<para>
	  UCS supports the mostly automatic migration of an existing Active Directory domain to UCS. All
	  users, groups, computer objects and group policies are migrated without the need to rejoin the
	  Windows clients. This is documented in <xref linkend="windows:adtakeover"/>.
	</para>

	<para>
	  Microsoft Active Directory domain controllers cannot join the Samba domain. This functionality is
	  planned at a later point in time.
	</para>

	<para>
	  Samba can not join an Active Directory Forest yet at this point.
	  </para>

	<para>
	  Incoming trust relationships with other Active Directory domains are configurable.
	  In this setup the external Active Directory domain trusts authentication decisions
	  of the UCS domain (Windows trusts UCS) so that UCS users can log on
	  to systems and Active Directory backed services in the Windows domain
	  (see <xref linkend="windows_trust"/>).
	  Outgoing trusts with Active Directory domain (UCS trusts Windows) are not supported currently.
	</para>

	<note><para>
	  The usage of UCS as a Windows NT-compatible domain controller is unsupported since UCS 4.3.
	</para></note>

  </section>

  <section id="windows:addomain">
	<title>Operation of a Samba domain based on Active Directory</title>

	<section id="windows:setup4">
	  <title>Installation</title>

	  <para>
		Samba as an AD domain controller can be installed on all UCS domain controllers from the
		Univention App Center with the application <emphasis>Active Directory-compatible domain
		controller</emphasis>. Alternatively, the software package
		<package>univention-samba4</package> can be installed. On the system roles &ucsMaster; and
		&ucsBackup; the <package>univention-s4-connector</package> package must also be installed
		(<command>univention-run-join-scripts</command> command must be run after
		installation). Additional information can be found in <xref
		linkend="computers::softwaremanagement::installsoftware"/>.
	  </para>

	  <para>
		A Samba member server can be installed on UCS member servers from the Univention App Center
		with the application <application>Windows-compatible Fileserver</application>. Alternatively, the
		software package <package>univention-samba</package> can be
		installed (<command>univention-run-join-scripts</command> command must be run after
		installation). Additional information can be found in <xref
		linkend="computers::softwaremanagement::installsoftware"/>.
	  </para>

	  <para>
		Samba supports the operation as a <emphasis>read-only domain controller</emphasis>. The
		setup is documented in <biblioref linkend="ext-doc-win"/>.
	  </para>
	</section>

	<section id="windows:samba4:services">
	  <title>Services of a Samba domain</title>
	  <section id="windows:samba4:services:auth">
		<title>Authentication services</title>

		<para>
		  User logins can only be performed on Microsoft Windows systems joined in the Samba
		  domain. Domain joins are documented in  <xref linkend="windows-domaenenbeitritt"/>.
		</para>

		<para>
		  Users who log on to a Windows system are supplied with a Kerberos ticket when they log
		  on. The ticket is then used for the further authentication. This ticket allows access to
		  the domain's resources.
		</para>

		<para>
		  Common sources of error in failed logins are:

		  <itemizedlist>
			<listitem><simpara>
			  Synchronization of the system times between the Windows client and domain controller
			  is essential for functioning Kerberos authentication. In the default setting, the
			  system time is updated via NTP during system startup. This can also be done manually
			  using the command <command>w32tm /resync</command>.
			</simpara></listitem>

			<listitem><simpara>
			  DNS service records need to be resolved during login. For this reason, the Windows
			  client should use the domain controller's IP address as its DNS name server.
			</simpara></listitem>
		  </itemizedlist>
		</para>

	  </section>

	  <section id="windows:samba4:fileservices">
		<title>File services</title>

		<para>
		  A file server provides files over the network and allows concentrating the storage of user data on a
		  central server.
		</para>

		<para>
		  The file services integrated in UCS support the provision of shares using the CIFS
		  protocol (see  <xref linkend="shares::general"/>). Insofar as the underlying file system
		  supports Access Control Lists (ACLs) (can be used with <systemitem class="filesystem">ext3</systemitem>, <systemitem class="filesystem">ext4</systemitem> and <systemitem class="filesystem">XFS</systemitem>), the ACLs can
		  also be used by Windows clients.
		</para>

		<para>
		  Samba Active Directory domain controllers can also provide file services. As a general
		  rule, it is recommended to separate domain controllers and file/print services in Samba
		  environments - the same as the Microsoft recommendations for Active Directory - that means using
		  domain controllers for logins/authentication and member services for file/print
		  services. This ensures that a high system load on a file server does not result in
		  disruptions to the authentication service. For smaller environments in which it is not
		  possible to run two servers, file and print services can also be run on a domain controller.
		</para>

		<para>
			Samba supports the <systemitem class="protocol">CIFS</systemitem> protocol and the successor <systemitem class="protocol">SMB2</systemitem> to provide file services. Using a client
			which supports <systemitem class="protocol">SMB2</systemitem> (as of <systemitem class="osname">Windows Vista</systemitem>, i.e., <systemitem class="osname">Windows 7/8</systemitem> too) improves the performance
		  and scalability.
		</para>

		<para>
		  The protocol can be configured using the &ucsUCR; variable
		  <envar>samba/max/protocol</envar>. It must be set on all Samba servers and then all Samba
		  server(s) restarted.

		  <itemizedlist>
			<listitem><simpara>
					<literal>NT1</literal> configures <systemitem class="protocol">CIFS</systemitem> (supported by all Windows versions)
			</simpara></listitem>

			<listitem><simpara>
					<literal>SMB2</literal> configures <systemitem class="protocol">SMB2</systemitem> (supported as of <systemitem class="osname">Windows Vista</systemitem>/<systemitem class="osname">Windows 7</systemitem>)
			</simpara></listitem>

			<listitem><simpara>
					<literal>SMB3</literal> configures <systemitem class="protocol">SMB3</systemitem> (supported as of <systemitem class="osname">Windows 8</systemitem>)
			</simpara></listitem>
		  </itemizedlist>
		</para>
	  </section>


	  <section id="windows:samba4:services:print">
		<title>Print services</title>
		<para>
		  Samba offers the possibility of sharing printers set up under Linux as network printers
		  for Windows clients. The management of the printer shares and the provision of the printer
		  drivers is described in <xref linkend="print::general"/>.
		</para>

		<para>
		  Samba AD domain controllers can also provide print services. In this case, the
		  restrictions described in <xref linkend="windows:samba4:fileservices"/> must be taken into
		  consideration.
		</para>
	  </section>


	  <section id="windows:s4connector">
		<title>Univention S4 connector</title>

		<para>
		  When using Samba as an Active Directory domain controller, Samba provides a separate LDAP
		  directory service. The synchronization between the UCS LDAP and the Samba LDAP occurs via
		  an internal system service, the Univention S4 connector. The connector is enabled on the
		  &ucsMaster; by default and typically requires no further configuration.
		</para>

		<para>
		  Further information on the status of the synchronization can be found in the log file
		  <filename>/var/log/univention/connector-s4.log</filename>. Additional information on analyzing
		  connector replication problems can be found in <u:sdb>1235</u:sdb>.
		</para>

		<para>
		  The <command>univention-s4search</command> command can be used to search in the Samba
		  directory service. If it is run as the <systemitem class="username">root</systemitem> user, the
		  required credentials of the machine account are used automatically:

		  <programlisting>
root@master:~# univention-s4search sAMAccountName=Administrator
# record 1
dn: CN=Administrator,CN=Users,DC=example,DC=com
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: user
cn: Administrator
instanceType: 4
(..)
		  </programlisting>
		</para>
	  </section>


	  <section id="windows:multimaster">
		<title>Replication of directory data</title>

		<para>
		  Samba AD domains use the Directory Replication System (DRS) to replicate the directory
		  data. DRS allows multi-master replication, i.e., the write changes from multiple domain
		  controllers are synchronized at protocol level. Consequently, the use of snapshots in
		  virtualization solutions should be avoided when using Samba 4 and Samba 4 should be
		  operated on a server which is never switched off.
		</para>

		<para>
		  The complexity of the multi-master replication increases with each additional Samba AD
		  domain controller. Consequently, it must be checked whether additional Samba AD domain
		  controllers are necessary or if a member server would not be a better choice for new
		  servers.
		</para>

		<para>
			Additional information on troubleshooting replication problems can be found in <u:sdb>1235</u:sdb>.
		</para>
	  </section>


	  <section id="windows:sysvolshare">
		<title>Synchronization of the SYSVOL share</title>
		<para>
		  The SYSVOL share is a share which provides group policies and logon scripts in Active
		  Directory / Samba 4. It is synchronized among all domain controllers and stored in the
		  <filename class="directory">/var/lib/samba/sysvol/</filename> directory.
		</para>

		<para>
		  In Microsoft Active Directory, the SYSVOL share is synchronized by the File Replication
		  Service (introduced with Windows 2000) or the Distributed File System (as of <systemitem class="osname">Windows 2008
		  R2</systemitem>). These replication methods are not yet fully implemented in Samba 4. The
		  synchronization between the Samba 4 domain controllers is performed in UCS via a Cron job
		  (every five minutes as standard - can be configured using the &ucsUCRV;
		  <envar>samba4/sysvol/sync/cron</envar>).
		</para>
	  </section>
	</section>

	<section id="windows:samba4:desktopmanagement">
	  <title>Configuration and management of Windows desktops</title>

	  <section id="gruppenrichtlinien">
		<title>Group policies</title>

		<section id="gpo:intro">
		  <title>Introduction</title>

		  <para>
			Group policies are an Active Directory feature which allows the central configuration of
			settings for computers and users. Group policies are also supported by Samba AD
			domains. The policies only apply to Windows clients; Linux or Mac OS systems cannot
			evaluate the policies.
		  </para>

		  <para>
			Group policies are often referred to as GPOs (<emphasis>group policy
			objects</emphasis>). Put more precisely, a GPO can contain a series of policies. Despite
			their name, group policy objects cannot be assigned directly to certain user groups, but
			instead are linked with certain AD administration units (domains,
			sites or organizational units) in the Samba directory service (Samba DS/AD) and thus
			refer to subordinate objects. A group-specific or user-specific evaluation is only
			indirectly possible via the <emphasis>Security Filtering</emphasis> of a group policy
			object, in which the <emphasis>Apply group policy Allow/Deny</emphasis> privilege can be directly
			restricted to certain groups, users or computers.
		  </para>

		  <para>
			As a basic rule, a distinction must be made between <emphasis>group policies</emphasis>
			(GPOs) and the similarly named <emphasis>group policy preferences (GPPs)</emphasis>:

			<itemizedlist>
			  <listitem><simpara>
				The settings made via <emphasis>GPOs</emphasis> are binding, whereas
				<emphasis>GPPs</emphasis> are merely used to enter preferences in the registry of
				Windows clients, which can still be overwritten on the client in certain
				circumstances.
			  </simpara></listitem>

			  <listitem><simpara>
				The settings made via <emphasis>GPOs</emphasis> are also dynamically applied to the
				target objects, whereas, in contrast, the settings made via
				<emphasis>GPPs</emphasis> are entered statically in the registry of Windows clients
				(this is also referred to as <emphasis>tattooing</emphasis>).
			  </simpara></listitem>
			</itemizedlist>

			For these reasons, <emphasis>GPOs</emphasis> are preferable to <emphasis>GPPs</emphasis>
			in the majority of cases. This remainder of this section deals exclusively with
			<emphasis>GPOs</emphasis>.
		  </para>

		  <para>
			In contrast to UCS policies (see <xref linkend="central:policies"/>), group policies are
			not configured in &ucsUMC;, but instead are configured in a separate editor, the
			<emphasis>Group Policy Management</emphasis> editor, which is a component of the
			<emphasis>Remote Server Administration Tools (RSAT)</emphasis>. The installation is described
			in <xref linkend="gpo:install"/>.
		  </para>

		  <para>
			There are two types of policies:

			<itemizedlist>
			  <listitem><simpara>
				<emphasis>User policies</emphasis> configure a user's settings, e.g., the
				configuration of the desktop. It is also possible to configure applications via
				group policies (e.g., the start page of Microsoft Internet Explorer or settings in
				LibreOffice).
			  </simpara></listitem>

			  <listitem><simpara>
				<emphasis>Computer policies</emphasis> define a Windows client's settings.
			  </simpara></listitem>
			</itemizedlist>
		  </para>

		  <para>
			Computer policies are evaluated for the first time the computer starts up; user policies
			during login. The policies are also continually evaluated for logged in users / running
			systems and updated (every 90-120 minutes in the default setting. The period varies at
			random to avoid peak loads.)
		  </para>

		  <para>
			The command <command>gpupdate /force</command> can also be run specifically to start the
			evaluation of group policies.
		  </para>

		  <para>
			Some policies - e.g., for the installation of software or for login scripts - are only
			evaluated during login (user policies) or system startup (computer policies).
		  </para>

		  <para>
			The majority of group policies only set one value in the Windows registry, which is then
			evaluated by Windows or an application. As standard users cannot modify any settings in
			the corresponding section of the Windows registry, it is also possible to configure
			restricted user desktops in which, for example, users cannot open the Windows Task
			Manager.
		  </para>

		  <para>
			The group policies are stored in the SYSVOL share, see <xref
			linkend="windows:sysvolshare"/>. They are linked with user and host accounts in the
			Samba directory service.
		  </para>

		</section>

		<section id="gpo:install">
		  <title>Installation of Group Policy Management</title>

		  <para>
			Group Policy Management can be installed as a component of the
			<emphasis>Remote Server Administration Tools</emphasis>
			on Windows clients. They can be found at
			<footnote><para><ulink url="http://www.microsoft.com/en-us/download/details.aspx?id=7887"/></para></footnote>
			for Windows 7, at
			<emphasis>Remote Server Administration Tools (RSAT) for Windows 8</emphasis>
			<footnote><para><ulink url="http://www.microsoft.com/de-de/download/details.aspx?id=28972"/></para></footnote>
			for Windows 8 or at
			<emphasis>Remote Server Administration Tools (RSAT) for Windows 10</emphasis>
			<footnote><para><ulink url="https://www.microsoft.com/en-us/download/details.aspx?id=45520"/></para></footnote>
			for Windows 10.
		  </para>

			<figure id="windows:gpo:activate"><title>Activating the Group Policy Management tools</title>
			<graphic scalefit="1" width="90%" align="center" fileref="illustrations44/gpo-activate-en.png"/>
			</figure>

		  <para>
			Following the installation, Group Policy Management must still be enabled in the Windows
			Control Panel. This is done by enabling the <guimenu>Group Policy Management Tools</guimenu>
			option under <guimenu>Start &ar; Control Panel &ar; Programs &ar; Turn Windows features on or off
			&ar;  Remote Server Administration Tools &ar; Feature Administration Tools</guimenu>.
		  </para>

		  <para>
			Following the enabling, Group Policy Management can be run under <guimenu>Start &ar;
			Administrative Tools &ar; Group Policy Management </guimenu>.
		  </para>

		</section>

		<section id="gpo:config">
		  <title>Configuration of policies with Group Policy Management</title>

		  <para>
			Group policies can only be configured by users who are members of the <systemitem class="groupname">Domain
			Admins</systemitem> group (e.g., the <systemitem class="username">Administrator</systemitem>). When logging in,
			attention must be paid to logging in with the domain Administrator account and not the
			local Administrator account. Group Policy Management can be run on any system in the
			domain.
		  </para>

		  <para>
			If more than one Samba domain controller is in use, consideration must be given to the
			replication of the GPO data, see <xref linkend="gpo:gposync"/>.
		  </para>
		  <para>
			There are two basic possibilities for creating GPOs:

			<itemizedlist>
			  <listitem><simpara>
				They can be created in the <guimenu>Group Policy Objects</guimenu> folder and then
				linked to different positions in the LDAP. This is practical if a policy is to be
				linked to several positions in the LDAP.
			  </simpara></listitem>

			  <listitem><simpara>
				The GPO can also be created at an LDAP position ad hoc and then directly linked to
				it. This is the simpler means for small and medium-sized domains. Domains created ad
				hoc are also shown in the <guimenu>Group Policy Objects</guimenu> folder.
			  </simpara></listitem>
			</itemizedlist>
		  </para>

		  <para>
			A policy can have one of three statuses: enabled, disabled or unset. The effect is
			always based on the formulation of the policy. For example, if it says <guimenu>Disable
			feature xy</guimenu>, the policy must be enabled to switch off the feature. Some
			policies have additional options, for example the <guimenu>Enable mail quota</guimenu>
			policy could include an additional option for managing the storage space.
		  </para>

			<figure id="windows:gpo:edit"><title>Editing a policy</title>
			<graphic scalefit="1" width="80%" align="center" fileref="illustrations44/gpo-edit-policy-en.png"/>
			</figure>

		  <para>
			Two standard policy objects are predefined:

			<itemizedlist>
			  <listitem><simpara>
				The <emphasis>Default Domain Policy</emphasis> object can be used to configure
				global policies for all users and computers within the same domain.
			  </simpara></listitem>

			  <listitem><simpara>
				The <emphasis>Default Domain Controllers Policy</emphasis> object has no use in a
				Samba domain (in a Microsoft AD domain the policies for Microsoft domain controllers
				would be performed via this object). The configuration of the Samba domain
				controllers in UCS is largely performed via &ucsUCR;.
			  </simpara></listitem>
			</itemizedlist>
		  </para>

		  <para>
			AD domains can be structured in sites. All the sites are listed in the main menu of Global Policy Management. There
			is also a list of the domains there. The current Samba versions do not support forest
			domains, so there is only ever one domain displayed here.
		  </para>

		  <para>
			One domain can be structured in different organizational units (OUs). This can, for
			example, be used to store the employees from accounting and the users in the
			administration department in different LDAP positions.
		  </para>

		  <para>
			Group policies can mutually overlap. In this case, the inheritance principle applies,
			e.g., the superordinate policies overwrite the subordinate ones. The applicable policies
			for a user can be displayed on the Windows client either with the modeling wizard in
			Group Policy Management or by entering the command <command>gpresult /user USERNAME
			/v </command> in the Windows command line.
		  </para>

			<figure id="windows:gpo:user"><title>Evaluating the GPO for the user <systemitem class="username">user01</systemitem></title>
			<graphic scalefit="1" width="80%" align="center" fileref="illustrations44/gpo-gpresult-en.png"/>
			</figure>

		  <para>
			The policies are evaluated in the following order:

			<itemizedlist>
			  <listitem><simpara>
				In the default setting, <emphasis>Default Domain Policy</emphasis> settings apply
				for all the users and computers within the domain.
			  </simpara></listitem>

			  <listitem><simpara>
				Policies linked to an OU overwrite policies from the default domain policy. If the
				OUs are nested further, in the case of conflict, the "most subordinate" policies in
				each case, in other words the one most closely linked to the target object,
				apply. The following evaluation order applies:
				</simpara>
				<itemizedlist>
				  <listitem><simpara>
					Assignment of a policy to an Active Directory site
				  </simpara></listitem>

				  <listitem><simpara>
					Settings of the default domain policy
				  </simpara></listitem>

				  <listitem><simpara>
					Assignment of a policy to an organizational unit (OU) (in turn, each subordinate
					OU overrules policies from superordinate OUs).
				  </simpara></listitem>
				</itemizedlist>
			  </listitem>
			</itemizedlist>
		  </para>

		  <para>
			Example: A company blocks access to the Windows Task Manager in general. This is done by
			enabling the <guimenu>Remove Task Manager</guimenu> policy in the
			<emphasis>Default Domain Policy</emphasis> object. However, the Task Manager should
			still be available to some staff with the requisite technical expertise. These users are
			saved in the <emphasis>IT staff</emphasis> OU. An additional group policy object is
			now created in which the <guimenu>Remove Task Manager</guimenu> policy is set
			to <emphasis>disabled</emphasis>. The new GPO is linked with the
			<emphasis>IT staff</emphasis> OU.
		  </para>

		</section>

		<section id="gpo:gposync">
		  <title>Configuration of group policies in environments with more than one Samba domain controller</title>

		  <para>
			A group policy is technically composed of two parts: On the one hand there is a
			directory in the domain controllers' file system which contains the actual policy files
			which are to be implemented on the Window system (saved in the SYSVOL share (see <xref
			linkend="windows:sysvolshare"/>)). On the other hand there is an object with the same
			name in the LDAP tree of the Samba directory service (Samba DS/AD), which is usually
			saved below an LDAP container named <emphasis>Group Policy Objects</emphasis>.
		  </para>

		  <para>
			Although the LDAP replication between the domain controllers is performed in just a few
			seconds, the files in the SYSVOL share are only replicated every five minutes in the
			default setting. It must be noted that the application of newly configured group
			policies in this period may fail if a client happens to consult a domain controller
			which has not yet replicated the current files.
		  </para>
		</section>

		<section id="gpo:adm">
			<title>Administrative templates (<acronym>ADMX</acronym>/<acronym>ADM</acronym>)</title>
		  <para>
			The policies displayed in Group Policy Management can be expanded with so-called
			<emphasis>administrative templates</emphasis>. This type of template defines the name
			under which the policy should appear in Group Policy Management and which value should
			be set in the Windows registry. Administrative templates are saved in so-called
			<emphasis>ADMX files</emphasis> (previously <emphasis>ADM files</emphasis>) <biblioref
			linkend="admx-reference"/>. Among other things, ADMX files offer the advantage that they
			can be provided centrally across several domain controllers so that Group Policy
			Management on all Windows clients displays the same configuration possibilities
			<biblioref linkend="admx-central"/>.
		  </para>

		  <para>
			The following example of an ADM file defines a computer policy in which a registry key
			is configured for the (fictitious) Univention RDP client. ADM files can also be
			converted to the newer ADMX format using third-party tools. Further information on the
			format of ADM files can be found under <biblioref linkend="microsoft-adm-templates"/>
			and <biblioref linkend="adm-templates-howto"/>. The administrative template must have
			the file suffix <filename class="extension">.adm</filename>:

			<programlisting language="sh">
CLASS MACHINE
CATEGORY "Univention"
POLICY "RDP client"
KEYNAME "Univention\RDP\StorageRedirect"
EXPLAIN "If this option it activated, sound output is enabled in the RDP client"
VALUENAME "Sound redirection"
VALUEON "Activated"
VALUEOFF "Deactivated"
END POLICY
END CATEGORY
			</programlisting>
		  </para>

			<figure id="windows:gpo:admin"><title>The activated administrative template</title>
			<graphic scalefit="1" width="80%" align="center" fileref="illustrations44/gpo-adm-template-en.png"/>
			</figure>

		  <para>
			The ADM file can then be converted to the ADMX format or imported directly via Group
			Policy Management. This is done by running the <guimenu>Add/Remove Templates</guimenu>
			option in the <guimenu>Administrative templates</guimenu> context
			menu. <guimenu>Add</guimenu> can be used to import an ADM file. The administrative
			templates are also saved in the SYSVOL share and replicated, which allows Group Policy
			Management to access them from the Windows clients.
		  </para>
		</section>

		<section id="gpo:wmifilter">
		  <title>Application of policies based on computer properties (WMI filters)</title>
		  <para>
			It is also possible to configure policies based on system properties. These properties
			are provided via the Windows Management Instrumentation interface. The mechanism which
			builds on this is known as <emphasis>WMI filtering</emphasis>. This makes it possible, for example, to apply
			a policy only to PCS with a 64-bit processor architecture or with at least 8 GB of
			RAM. If a system property changes (e.g., if more memory is installed), the respective
			filter is automatically re-evaluated by the client.
		  </para>

		  <para>
			The WMI filters are displayed in the domain structure in the <guimenu>WMI
			Filters</guimenu> container. <guimenu>New</guimenu> can be used to define an additional
			filter. The filter rules are defined under <guimenu>Queries</guimenu>. The rules are
			defined in a syntax similar to SQL. Examples rules can be found in <biblioref
			linkend="microsoft-wmi-filter"/> and <biblioref linkend="add-wmi-filters"/>.
		  </para>

		</section>

	  </section>

	  <section id="netlogon-freigabe:samba4">
		<title>Logon scripts / NETLOGON share</title>
		<para>
		  The NETLOGON share serves the purpose of providing logon scripts in Windows domains. The
		  logon scripts are executed following after the user login and allow the adaptation of the
		  user's working environment. Scripts have to be saved in a format which can be executed by
		  Windows, such as <filename class="extension">bat</filename>.
		</para>

		<para>
		  The logon scripts are stored in
		  <filename class="directory">/var/lib/samba/sysvol/<replaceable>Domainname</replaceable>/scripts/</filename> and provided under
		  the share name <emphasis>NETLOGON</emphasis>.
		  The file name of the script must be given relative to that directory.
		</para>

		<para>
		  The NETLOGON share is replicated within the scope of the SYSVOL
		  replication.
		</para>

		<para>
		  The logon script can be assigned for each user, see <xref linkend="users::management"/>.
		</para>
	  </section>


	  <section id="windows:serverhome:samba4">
		<title>Configuration of the file server for the home directory</title>

		<para>
		  The home directory can be defined user-specifically in &ucsUMC;, see <xref
		  linkend="users::management"/>. This is performed with the setting <guimenu>Windows home
		  path</guimenu>, e.g., <filename class="directory">\\ucs-file-server\smith</filename>.
		</para>

		<para>
		  The multi edit mode of &ucsUMC; can be used to assign the home directory to multiple
		  users at one time, see <xref linkend="central:user-interface:edit"/>.
		</para>
	  </section>


	  <section id="windows:roamingprofiles:samba4">
		<title>Roaming profiles</title>
		<para>
		  Samba supports roaming profiles, i.e., user settings are saved on a central server. This
		  directory is also used for storing the files which the user saves in the <emphasis>My
		  Documents</emphasis> folder. Initially, these files are stored locally on the Windows
		  computer and then synchronized onto the Samba server when the user logs off.
		</para>

		<para>
		  If the profile path is changed in &ucsUMC;, then a new profile directory will be
		  created. The data in the old profile directory will be kept. These data can be manually
		  copied or moved to the new profile directory. Finally, the old profile directory can be
		  deleted.
		</para>

		<para>
		  No roaming profiles are used in the default setting in Samba 4.
		</para>

		<para>
		  Roaming profiles can be configured via a group policy found under <guimenu>Computer
		  configuration &ar; Policies &ar; Administrative templates &ar; System &ar; User profiles
		  &ar; Set roaming profile path for all users logging onto this computer</guimenu>.
		</para>

		<note>
		  <para>
			As standard, the Administrator accesses shares with root rights. If as a result the
			profile directory is created with the root user, it should be manually assigned to the
			Administrator with the command <command>chown</command>.
		  </para>
		</note>
	  </section>

	</section>

  </section>

<section id="ad-connector:general">
  <title>Active Directory Connection</title>
  <section id="ad-connector:einfuehrung">
	<title>Introduction</title>
	<para>
	  &ucsUCS; can be operated together with an existing Active Directory domain (AD domain) in two different ways. Both modes can be set up using the <emphasis>Active Directory Connection</emphasis> application from the Univention App Center (see <xref linkend="computers::softwaremanagement::installsoftware"/>). This is available on a &ucsMaster; and &ucsBackup;.
	</para>

	<para>
	  The two modes are:
	  <itemizedlist>
	    <listitem><simpara>
	      UCS as a part (domain member) of an AD domain (see <xref linkend="ad-connector:ad-member-einrichtung"/>)
	    </simpara></listitem>
	    <listitem><simpara>
	      Synchronization of account data between an AD domain and a UCS domain (see <xref linkend="ad-connector:ad-connector-einrichtung"/>).
	    </simpara></listitem>
	  </itemizedlist>
	</para>

	<para>
	  In both modes, the Active Directory Connection service is used in UCS (UCS AD Connector for short), which can synchronize the directory service objects between a Windows Server 2003-2019 with Active Directory (AD) and the OpenLDAP directory of &ucsUCS;.
	</para>

	<para>
	  In the first case, the configuration of a UCS server system as a member of an AD domain, the AD functions as the primary directory service and the respective UCS system joins the trust context of the AD domain. The domain membership gives the UCS system restricted access to the account data of the Active Directory domain. The set-up of this operating mode is described in detail in <xref linkend="ad-connector:ad-member-einrichtung"/>.
	</para>

	<para>
	  The second mode, which can be configured via the <emphasis>Active Directory Connection</emphasis> app, is used to run the UCS domain parallel to an existing AD domain. In this mode, each domain user is assigned a user account with the same name in both the UCS and the AD domain. Thanks to the use of the name identity and the synchronization of the encrypted password data, this mode allows transparent access between the two domains. In this mode, the authentication of a user in the UCS domain occurs directly within the UCS domain and as such is not directly dependent on the AD domain. The set-up of this operating mode is described in detail in <xref linkend="ad-connector:ad-connector-einrichtung"/>.
	</para>
  </section>

  <section id="ad-connector:ad-member-einrichtung">
  <title>UCS as a member of an Active Directory domain</title>

	<para>
		In the configuration of a UCS server system as a member of an AD domain (<emphasis>AD member</emphasis> mode), the AD functions as the primary directory service and the respective UCS system joins the trust context of the AD domain. The UCS system is not able to operate as an Active Directory domain controller itself. The domain membership gives the UCS system restricted access to the account data of the Active Directory domain, which it exports from the AD by means of the UCS AD Connector and writes locally in its own OpenLDAP-based directory service. In this configuration, the UCS AD Connector does not write any changes in the AD.
	</para>

	<para>
	  The <emphasis>AD member</emphasis> mode is ideal for expanding an AD domain with applications that are available on the UCS platform. Apps installed on the UCS platform can then be used by the users of the AD domain. The authentication is still performed against native Microsoft AD domain controllers.
	</para>

  <para>
		The set-up wizard can be started directly from the UCS installation by selecting
		<emphasis>Join into an existing Active Directory domain</emphasis>. Subsequently, the set-up
		wizard can be installed with the app <emphasis>Active Directory Connection</emphasis> from the
		Univention App Center. Alternatively, the software package
		<package>univention-ad-connector</package> can be installed. Further information can be found in
		<xref linkend="computers::softwaremanagement::installsoftware"/>.
  </para>

  <note>
		<itemizedlist>
			<listitem><simpara>The <emphasis>AD member</emphasis> mode can only be configured on a &ucsMaster;.</simpara></listitem>
			<listitem><simpara>The name of the DNS domain of the UCS systems must match that of the AD domain. The host name must of course be different.</simpara></listitem>
			<listitem><simpara>All the AD and UCS servers in a connector environment must use the same time zone.</simpara></listitem>
		</itemizedlist>
  </note>

    <figure id="windows:gpo:mode"><title>Configuration of the operating mode as part of an AD domain</title>
      <graphic scalefit="1" width="100%" align="center" fileref="illustrations44/admember_1-en.png"/>
    </figure>

  <para>
	In the first dialogue window of the set-up wizard, the point <emphasis>Configure UCS as part of an AD domain</emphasis> is preselected and can be confirmed with <mousebutton>Next</mousebutton>.
  </para>

  <para>
	The next dialogue window requests the address of an AD domain controller as well as the name of the standard administrator account of the AD domain and its password. The standard AD administrator account should be used here.
	The specified AD domain controller should also provide DNS services for the domain.
    Pressing the <mousebutton>Join AD domain</mousebutton> button starts the domain join.
  </para>

    <figure id="windows:ad:join"><title>Domain join of an AD domain</title>
      <graphic scalefit="1" width="100%" align="center" fileref="illustrations44/admember_2-en.png"/>
    </figure>

  <para>
    If the system time of the UCS system is more than 5 minutes ahead of the system time of the AD domain controller, manual adjustment of the system times is required. This is necessary because the AD Kerberos infrastructure is used for the authentication.
    System times should not, however, be turned back, in order to avoid inconsistencies.
  </para>

  <para>
    The domain join is performed automatically.
    The subsequent dialogue window should be confirmed with <mousebutton>Finish</mousebutton>. Then the UMC server should be restarted by clicking <mousebutton>Restart</mousebutton>.
  </para>

  <note>
    <para>
		Once the <emphasis>AD member</emphasis> mode has been set up, the authentication is performed against the AD domain controller.
		<emphasis>Consequently, the password from the AD domain now applies for the administrator.</emphasis>
		If an AD domain with a non-English language convention has been joined, the <systemitem class="username">administrator</systemitem> account from UCS is automatically changed to the spelling of the AD during the domain join.
		The same applies for all user and group objects with <emphasis>Well Known SID</emphasis> (e.g., <systemitem class="groupname">Domain Admins</systemitem>).
    </para>
  </note>

  <warning>
    <para>
      If additional UCS systems were already part of the UCS domain in addition to the &ucsMaster;, they must also join the domain anew. At the same time they recognize that the &ucsMaster; is in <emphasis>AD member</emphasis> mode and also join the authentication structure of the AD domain and can then also provide Samba file shares, for example.
    </para>
  </warning>

  <note>
  	<para>
    As the AD Kerberos infrastructure is used for the authentication of users in this mode, it is essential that the system times of UCS and the AD domain controller are synchronized (with a tolerance of 5 minutes). For this purpose, the AD domain controller is configured as the NTP time server in UCS.

    	In the case of authentication problems, the system time should always be the first thing to be checked.
    </para>
  </note>

  <para>
    Following this set-up, the <emphasis>Active Directory Connection</emphasis> UMC module can be used for further administration, e.g., for checking whether the service is running and to restart it if necessary (see <xref linkend="ad-connector:neustart"/>).
  </para>

  <para>
    To use an encrypted connection between Active Directory and the &ucsMaster; not only for the authentication, but also for data exchange itself, the root certificate of the certification authority can be exported from the AD domain controller and uploaded via the UMC module. Further information on this topic is available in <xref linkend="ad-connector:ad-zertifikat"/>.
  </para>

  <para>
    In the default setting, the Active Directory connection set up in this way does not transfer any password data from AD to the UCS directory service. Some apps from the Univention App Center require encrypted password data. If an app needs it, a note is shown in the App Center.
  </para>

  <para>
	  In <emphasis>AD member</emphasis> mode, in the default setting, the UCS AD Connector exports object data from the AD with the authorizations of the &ucsMaster;'s machine account.
	  These authorizations are not sufficient for exporting encrypted password data.
	  In this case, the LDAP DN of a privileged replication user can be adjusted manually in the &ucsUCRV; <envar>connector/ad/ldap/binddn</envar>.
	  This must be a member of the <systemitem class="groupname">Domain Admins</systemitem> group in the AD.
	  The corresponding password must be saved in a file on the &ucsMaster; and the file name entered in the &ucsUCRV; <envar>connector/ad/ldap/bindpw</envar>.
	  If the access password is changed at a later point in time, the new password must be entered in this file.
	  The access rights for the file should be restricted so that only the <systemitem class="username">root</systemitem> owner has access.
  </para>
  <para>
  	The following commands demonstrate the steps in an example:
  </para>

  <programlisting language="sh">
ucr set connector/ad/ldap/binddn=Administrator
ucr set connector/ad/ldap/bindpw=/etc/univention/connector/password
touch /etc/univention/connector/password
chmod 600 /etc/univention/connector/password
echo -n "Administrator password" > /etc/univention/connector/password
ucr set connector/ad/mapping/user/password/kinit=false
  </programlisting>

  <para>
    If desired, the AD domain controller can also be replaced by the &ucsMaster; at a later point in time. This is possible via the <emphasis>Active Directory Takeover</emphasis> application (see <xref linkend="windows:adtakeover"/>).
  </para>

  </section>

<section id="ad-connector:ad-connector-einrichtung">
  <title>Setup of the UCS AD connector</title>

  <para>
    As an alternative to membership in an AD domain, as described in the previous section, the Active Directory Connection can be used to synchronize user and group objects between a UCS domain and an AD domain. In addition to unidirectional synchronization, this operating mode also allows bidirectional synchronization. In this operating mode, both domains exist in parallel and their authentication systems function independently. The prerequisite for this is the synchronization of the encrypted password data.
  </para>

  <para>
    In the default setting, containers, organizational units, users, groups and computers are synchronized.
  </para>

  <para>
    Information on the attributes configured in the basic setting and particularities to take into account can be found in <xref linkend="ad-connector:details-zur-vorkonfigurierten-synchronization"/>.
  </para>

  <para>
    The identical user settings in both domains allow users to access services in both environments transparently. After logging on to a UCS domain, subsequent connection to a file share or to an Exchange server with Active Directory is possible without a renewed password request. Users and administrators will find users and groups of the same name on the resources of the other domain and can thus work with their familiar permission structures.
  </para>

  <para>
    The initialization is performed after the first start of the connector. All the entries are read out of the UCS, converted to AD objects according to the mapping set and added (or modified if already present) on the AD side. All the objects are then exported from the AD and converted to UCS objects and added/modified accordingly on the UCS side. As long as there are changes, the directory service servers continue to be requested. The UCS AD connector can also be operated in a unidirectional mode.
  </para>

  <para>
    Following the initial sync, additional changes are requested at a set interval. This value is set to five seconds and can be adjusted manually using the &ucsUCR; variable <envar>connector/ad/poll/sleep</envar>.
  </para>

  <para>
    If an object cannot be synchronized, it is firstly reset (“rejected”). Following a configurable number of cycles – the interval can be adjusted using the &ucsUCR; variable <envar>connector/ad/retryrejected</envar> – another attempt is made to import the changes. The standard value is ten cycles. In addition, when the UCS AD Connector is restarted, an attempt is also made to synchronize the previously rejected changes again.
  </para>

  <para>
	The UCS AD connector can only be installed on a &ucsMaster; or
	&ucsBackup; system.
  </para>

<section id="ad-connector:basicsetup">
  <title>Basic configuration of the UCS AD Connector</title>
  <para>
	The UCS AD Connector is configured using the UMC wizard <guimenu>Active Directory Connection</guimenu>.
  </para>

  <para>
	The wizard can be installed from the Univention App Center with the application
	<emphasis>Active Directory Connection</emphasis>. Alternatively, the software package
	<package>univention-ad-connector</package> can be installed. Additional information can be found in
	<xref linkend="computers::softwaremanagement::installsoftware"/>.
  </para>

  <note>
	<para>
	  All AD and UCS servers in a connector environment must
	  use the same time zone.
	</para>
  </note>

  <warning>
	<para>
	  Despite intensive tests it is not possible to rule out that the
	  results of the synchronization may affect the operation of a
	  productive domain. The connector should therefore be tested for the
	  respective requirements in a separate environment in advance.
	</para>
  </warning>

  <para>
	It is convenient to perform the following steps with a web browser from the AD domain controller, as the files need to be downloaded from the AD domain controller and uploaded into &ucsUMC;.
  </para>

  <para>
	Internet Explorer 6 - which is preinstalled on Windows 2003 systems - is not supported by
	&ucsUMC;. The browser must be updated before continuing.
  </para>

  <para>
	In the first dialog window of the set-up wizard, the point <emphasis>Synchronization of content data between an AD and this UCS domain</emphasis> must be selected and confirmed with <mousebutton>Next</mousebutton>.
	</para>

	<figure id="windows:ad:connector"><title>Configuration of the UCS AD Connector in UMC</title>
	  <graphic scalefit="1" width="100%" align="center" fileref="illustrations44/adconnector_1-en.png"/>
	</figure>

  <para>
	The address of an AD domain controller is requested in the next dialogue window.
	Here you can specify the IP address of a fully qualified DNS name.
	If the UCS system is not be able to resolve the computer name of the AD
	system, the AD DNS server can either be configured as the DNS forwarder
	under UCS or a DNS host record can be created for the AD system in the UMC DNS
	management (see <xref linkend="networks::dns::hostrecord"/>).
  </para>

  <para>
	Alternatively, a static entry can also be adopted in <filename>/etc/hosts</filename> via
	&ucsUCR;, e.g.

<programlisting language="sh">
ucr set hosts/static/192.0.2.100=w2k8-32.ad.example.com
</programlisting>

  </para>

  <para>
	In the <guimenu>Active Directory account</guimenu> field, the user is configured which is used for the access on the AD. The setting is saved in the &ucsUCRV; <envar>connector/ad/ldap/binddn</envar>. The replication user must be a member of the <systemitem class="groupname">Domain Admins</systemitem> group in the AD.
  </para>

  <para>
	The password used for the access must be entered in the <guimenu>Active Directory password</guimenu> field. On the UCS system it is only saved locally in a file which only the <systemitem class="username">root</systemitem> user can read.
  </para>

  <para>
	<xref linkend="ad-connector:ad-passwort"/> describes the steps required if these access data need to be adjusted at a later point in time.
  </para>

  <para>
	Clicking on <mousebutton>Next</mousebutton> prompts the set-up wizard to check the connection to the AD domain controller. If it is not possible to create an SSL/TLS-encrypted connection, a warning is emitted in which you are advised to install a certification authority on the AD domain controller. It is recommended to follow this advice. Following this step, the set-up can be continued by clicking <mousebutton>Next</mousebutton> again. If it is still not possible to create an SSL/TLS-encrypted connection, a security query appears asking whether to set up the synchronization without SSL encryption.
	If this is desired, the set-up can be continued by clicking <mousebutton>Continue without encryption</mousebutton>. In this case, the synchronization of the directory data is performed unencrypted.
  </para>

  <para>
	If the AD domain controller supports SSL/TLS-encrypted connections, the set-up wizard offers <guimenu>Upload AD root certificate</guimenu> in the next step. This certificate must be exported from the AD certification authority in advance (see <xref linkend="ad-connector:ad-zertifikat"/>). In contrast, if this step is skipped, the certificate can also be uploaded via the UMC module at a later point in time and the SSL/TLS encryption enabled (until that point all directory data will, however, be synchronized unencrypted).
  </para>

  <para>
	The connector can be operated in different modes, which can be selected in the next dialogue window <guimenu>Configuration of Active Directory domain synchronization</guimenu>.
	In addition to bidirectional synchronization, replication can also be performed in one direction from AD to UCS or from UCS to AD.
	Once the mode has been selected, <mousebutton>Next</mousebutton> needs to be clicked.
  </para>

  <para>
	Once <mousebutton>Next</mousebutton> is clicked, the configuration is taken over and the UCS AD Connector started.
	The subsequent dialogue window needs to be closed by clicking on <mousebutton>Finish</mousebutton>.
  </para>
  <para>
    Following this set-up, the <emphasis>Active Directory Connection</emphasis> UMC module can be used for further administration of the Active Directory Connection, e.g., for checking whether the service is running and restart it if necessary (see <xref linkend="ad-connector:neustart"/>).
  </para>

  <note>
	<para>
		The connector can also synchronize several AD domains within one UCS domain; this is documented in <xref linkend="ext-doc-win"/>.
	</para>
  </note>

    <figure id="windows:ad:dialog"><title>Administration dialogue for the Active Directory Connection</title>
      <graphic scalefit="1" width="90%" align="center" fileref="illustrations44/adconnector_2-en.png"/>
    </figure>

</section>

<section id="ad-connector:ad-zertifikat">
  <title>Importing the SSL certificate of the Active Directory</title>
  <para>
	An SSL certificate must be created on the Active Directory system and
	the root certificate exported to allow encrypted communication. The
	certificate is created by the Active Directory's certificate service.
	The necessary steps depend on the Windows versions used. Three versions
	are shown below as examples.
  </para>

  <para>
	The encrypted communication between the UCS system and Active Directory
	can also be deactivated by setting the &ucsUCRV; <envar>connector/ad/ldap/ssl</envar>
	to <literal>no</literal>. This setting does not affect the replication of
	encrypted password data.
  </para>

  <section id="windows:Exporting_the_certificate_on_Windows_2003">
	<title>Exporting the certificate on Windows 2003</title>
	<para>
	  The certificate service can be installed subsequently if
	  necessary: <guimenu>Start &ar; Properties &ar;
	  System settings &ar; Software &ar; Windows components,
	  choose Certificate Services &ar; Next
	  select Enterprise root CA &ar; Next,
	  Enter domain name &ar; Next &ar; Next</guimenu>.
	</para>

	<para>
	  The AD server should be rebooted after the installation.
	</para>

	<para>
	  This certificate must now be exported and copied onto the UCS system:
	  <guimenu>Root CA &ar; AD domain &ar;
	  Properties &ar; Show certificate &ar; Details &ar; Copy to file
	  &ar; DER binary encoded X.509</guimenu>.
	</para>
  </section>

  <section id="windows:Exporting_the_certificate_on_Windows_2008">
	<title>Exporting the certificate on Windows 2008</title>
	<para>
	  If the certificate service is not installed, it must be installed
	  before proceeding.
	</para>

	  <figure id="windows:2008:ca"><title>Exporting the root certificate on Windows 2008</title>
	  <graphic scalefit="1" width="90%" align="center" fileref="illustrations44/adconnector_23-en.png"/>
	  </figure>

	<para>
	  <guimenu>Start &ar; Server Manager &ar; Add or Remove Programs &ar; Add Roles &ar; Next &ar;
	  Active Directory Certificate Services &ar; Next &ar; Next &ar; activate Certification
	  Authority &ar; select Enterprise &ar; select Root CA &ar;
	  Create new private key &ar; Next &ar; Accept the proposed crypto setting &ar; Next &ar;
	  Accept the proposed name for the CA &ar; Select an arbitrary validate date &ar;
	  Next &ar; Accept default path for the certificate database</guimenu>.
	</para>

	<para>
	  The following dialogue contains a warning that the name and domain
	  setting cannot be changed again once the certificate authority is
	  installed. This must be confirmed with <guimenu>Install</guimenu>.
	</para>

	<para>
	  The AD server must then be restarted.
	</para>

	<para>
	  This certificate must now be exported and copied onto the UCS system:
	  <guimenu>Start &ar; Administrative Tools &ar; Certification &ar;
	  Authority</guimenu>. A computer list is shown there and the elements <guimenu>Revoked Certificates</guimenu>,
	  <guimenu>Issued Certificates</guimenu>, <guimenu>Pending Requests</guimenu>,
	  <guimenu>Failed Requests</guimenu> and <guimenu>Certificate Templates</guimenu>
	  displayed under every system. Here, one must right click on the computer name - not on
	  one of the elements - and then select <guimenu>Properties</guimenu>. The root
	  certificate is usually called <guimenuitem>Certificate #0</guimenuitem>. Then select
	  <guimenu>Open &ar; Copy to File &ar; DER encoded binary X.509 (.CER) &ar; Select an arbitrary
	  filename &ar; Finish</guimenu>.
	</para>
  </section>

  <section id="windows:adconn:win2012">
	<title>Exporting the certificate on Windows 2012</title>

	<para>
	  If the certificate service is not installed, it must be installed
	  before proceeding.
	</para>

	<para>
	  The server manager must be opened. There, select the <guimenu>Active Directory Certificate Services</guimenu>
	  role in the <guimenu>Manage &ar; Add Roles and Features</guimenu> menu. When selecting the role services, it is sufficient simply to select
	  <guimenu>Certification Authority</guimenu>. A yellow warning triangle is then shown in the top
	  bar in the server manager. Here, the <guimenu>Configure Active Directory Certificate Services on the server</guimenu>
	  option must be selected. <guimenu>Certification Authority</guimenu> is selected as the role service to be
	  configured. The type of installation is <guimenu>Enterprise CA &ar; Root CA</guimenu>
	  Now, click on <guimenu>Create a new private key</guimenu> and confirm the suggested encryption settings and the suggested name of
	  the certification authority. Any period of validity can be set. The standard paths can be
	  used for the database location.
	</para>

	<para>
	  The AD server must then be restarted.
	</para>

	<para>
	  This certificate must now be exported and copied onto the UCS system: <guimenu>Server Manager  &ar; Active Directory Certificate Services</guimenu>
	  Then right click on the server and select
	  <guimenu>Certification Authority</guimenu>. There, right click on the name of the generated
	  certificate and <guimenu>Open &ar; Copy to File &ar; DER encoded binary X.509 (.CER) &ar;
	  Select an arbitrary filename &ar; Finish</guimenu>.
	</para>

	<para>
	  A computer list is shown there and the elements <guimenu>Revoked Certificates</guimenu>,
	  <guimenu>Issued Certificates</guimenu>, <guimenu>Pending Requests</guimenu>,
	  <guimenu>Failed Requests</guimenu> and <guimenu>Certificate Templates</guimenu>
	  displayed under every system. Here, one must right click on the computer name - not on
	  one of the elements - and then select <guimenu>Properties</guimenu>. The root
	  certificate is usually called <guimenuitem>Certificate #0</guimenuitem>. Then select
	  <guimenu>Open &ar; Copy to File &ar; DER encoded binary X.509 (.CER) &ar; Select an arbitrary
	  filename &ar; Finish</guimenu>.
	</para>

  </section>


<section id="windows:Copying_the_Active_Directory_certificate_to_the_UCS_system"><title>Copying the Active Directory certificate to the UCS system</title>
<para>
The SSL AD certificate should now be imported into the UCS
system using the UMC wizard.
</para>
<para>
This is done by clicking on <mousebutton>Upload</mousebutton> in the sub menu
<guimenu>Active Directory connection SSL configuration</guimenu>.
</para>
<para>
This opens a window in which a file can be selected, which is being
uploaded and integrated into the UCS AD Connector.
</para>
</section>
</section>

<section id="ad-connector:neustart"><title>Starting/Stopping the Active Directory Connection</title>
<para>
The connector can be started using <mousebutton>Start Active
  Directory connection service</mousebutton> and stopped using
<mousebutton>Stop Active Directory connection service</mousebutton>. Alternatively, the
starting/stopping can also be performed with the
<filename>/etc/init.d/univention-ad-connector</filename> init-script.
</para>
</section>

<section id="windows:Functional_test_of_basic_settings"><title>Functional test of basic settings</title>
<para>
The correct basic configuration of the connector can be checked by
searching in Active Directory from the UCS system. Here one can search e.g.
for the administrator account in Active Directory
with <command>univention-adsearch cn=Administrator</command>.
</para>
<para>
As <command>univention-adsearch</command> accesses the configuration saved
in &ucsUCR;, this allows you to check the reachability/configuration
of the Active Directory access.
</para>
</section>

<section id="ad-connector:ad-passwort"><title>Changing the AD access password</title>
  <para>
	  The access data required by the UCS AD Connector for Active Directory are configured via the &ucsUCRV; <envar>connector/ad/ldap/binddn</envar> and <envar>connector/ad/ldap/bindpw</envar>.
	  If the password has changed or you wish to use another user account, these variables must be adapted manually.
	  The &ucsUCRV; <envar>connector/ad/ldap/binddn</envar> is used to configure the LDAP DN of a privileged replication user.
	  This must be a member of the <systemitem class="groupname">Domain Admins</systemitem> group in the AD.
	  The corresponding password must be saved locally in a file on the UCS system, the name of which must be entered in the &ucsUCRV; <envar>connector/ad/ldap/bindpw</envar>.
	  The access rights for the file should be restricted so that only the <systemitem class="username">root</systemitem> owner has access.
	  The following commands show this as an example:
  </para>

  <programlisting language="sh">
eval "$(ucr shell)"
echo "Updating ${connector_ad_ldap_bindpw?}"
echo "for AD sync user ${connector_ad_ldap_binddn?}"
touch "${connector_ad_ldap_bindpw?}"
chmod 600 "${connector_ad_ldap_bindpw?}"
echo -n "Current AD Syncuser password" > "${connector_ad_ldap_bindpw?}"
  </programlisting>
</section>

</section>

<section id="ad-connector:tools"><title>Additional tools / Debugging connector problems</title>
<para>
The UCS AD Connector provides the following tools and log files for diagnosis:
</para>

<section id="ad-connector:univention-adsearch"><title><command>univention-adsearch</command></title>
<para>
This tool facilitates a simple LDAP search in Active Directory.
Objects deleted in AD are always shown (they are still kept in
an LDAP subtree in AD). As the first parameter the script awaits an LDAP
filter; the second parameter can be a list of LDAP attributes to be
displayed.
</para>
<para>
Example:
</para>
<programlisting language="sh">
univention-adsearch cn=administrator cn givenName
</programlisting>
</section>

<section id="ad-connector:univention-connector-list-rejected"><title><command>univention-connector-list-rejected</command></title>
<para>
This tool lists the DNs of non-synchronized objects. In addition, in
so far as temporarily stored, the corresponding DN in the
respective other LDAP directory will be displayed. In conclusion
<property>lastUSN</property> shows the ID of the last change synchronized by AD.
</para>
<para>
This script may display an error message or an incomplete output if
the AD connector is in operation.
</para>
</section>

<section id="windows:Logfiles"><title>Logfiles</title>
<para>
For troubleshooting when experiencing synchronization problems,
corresponding messages can be found in the following files on the UCS
system:
</para>
<programlisting>
/var/log/univention/connector.log
/var/log/univention/connector-status.log
</programlisting>
</section>
</section>

<section id="ad-connector:details-zur-vorkonfigurierten-synchronization"><title>Details on preconfigured synchronization</title>
<para>
All containers which are ignored due to corresponding filters are
exempted from synchronization as standard. This can be found in the
<filename>/etc/univention/connector/ad/mapping</filename> configuration file
under the <emphasis>global_ignore_subtree</emphasis> setting.
</para>

<section id="ad-connector:container-und-organisationseinheiten"><title>Containers and organizational units</title>
<para>
Containers and organizational units are synchronized together with their
description. In addition, the <uri>cn=mail</uri> and <uri>cn=kerberos</uri>
containers are ignored on both sides. Some particularities must be
noted for containers on the AD side. In the <guimenu>User
  manager</guimenu> Active Directory offers no possibility to create
containers, but displays them only in the advanced mode
(<guimenu>View &ar; Advanced settings</guimenu>).
</para>

<section id="windows:ad-connector:Particularities"><title>Particularities</title>
<itemizedlist>
<listitem>
<para>Containers or organizational units deleted in AD are deleted
  recursively in UCS, which means that any non-synchronized subordinate
  objects, which are not visible in AD, are also deleted.</para>
  </listitem>
</itemizedlist>
</section>
</section>

<section id="ad-connector:gruppen"><title>Groups</title>
<para>
Groups are synchronized using the group name, whereby a user's primary
group is taken into account (which is only stored for the user in LDAP
in AD).
</para>
<para>
Group members with no opposite in the other system, e.g., due to
ignore filters, are ignored (thus remain members of the group).
</para>
<para>
The description of the group is also synchronized.
</para>

<section id="windows:groups:Particularities"><title>Particularities</title>
<itemizedlist>
<listitem>
<para>The <emphasis>pre Windows 2000 name</emphasis> (LDAP attribute
<property>samAccountName</property>) is used in AD, which means that a group in
Active Directory can appear under a different name from in UCS.
</para>
</listitem>
<listitem>
<para>The connector ignores groups, which have been configured as a
  <emphasis>Well-Known Group</emphasis> under <guimenu>Samba group type</guimenu> in
  &ucsUDM;. There is no synchronization of the SID or the RID.
</para>
</listitem>
<listitem>
<para>Groups which were configured as <emphasis>Local Group</emphasis> under
  <guimenu>Samba group type</guimenu> in &ucsUDM; are synchronized as a
  <emphasis>global group</emphasis> in the Active Directory by the connector.
</para>
</listitem>
<listitem>
<para>Newly created or moved groups are always saved in the same
  subcontainer on the opposite side. If several groups with the same
  name are present in different containers during initialization, the
  members are synchronized, but not the position in LDAP. If one of
  these groups is migrated on one side, the target container on the
  other side is identical, so that the DNs of the groups can no longer
  be differentiated from this point onward.
</para>
</listitem>
<listitem>
<para>Certain group names are converted using a mapping table so that,
  for example in a German language setup, the UCS group <systemitem class="groupname">Domain
    Users</systemitem> is synchronized with the AD group
  <foreignphrase>Domänen-Benutzer</foreignphrase>. When used in anglophone AD domains, this
  mapping can result in <foreignphrase>germanophone</foreignphrase> groups' being created and
  should thus be deactivated in this case. This can be done using the
  &ucsUCRV; <envar>connector/ad/mapping/group/language</envar>
</para>
<para>
The complete table is:
</para>
<informaltable>
<?dbhtml table-width="50%" ?>
<?dbfo table-width="50%" ?>
<tgroup cols="2">
<colspec colnum="1" colname="col1" colwidth="1*"/>
<colspec colnum="2" colname="col2" colwidth="1*"/>
<thead>
<row>
<entry><emphasis>UCS group</emphasis></entry>
<entry><emphasis>AD group</emphasis></entry>
</row>
</thead>
<tbody>
<row>
	<entry><systemitem class="groupname" lang="en">Domain Users</systemitem></entry>
	<entry><systemitem class="groupname" lang="de">Domänen-Benutzer</systemitem></entry>
</row>
<row>
	<entry><systemitem class="groupname" lang="en">Domain Admins</systemitem></entry>
	<entry><systemitem class="groupname" lang="de">Domänen-Admins</systemitem></entry>
</row>
<row>
	<entry><systemitem class="groupname" lang="en">Windows Hosts</systemitem></entry>
	<entry><systemitem class="groupname" lang="de">Domänencomputer</systemitem></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</listitem>
<listitem>
<para>Nested groups are represented differently in AD and UCS. In UCS,
  if groups are members of groups, these objects can not always
  be synchronized on the AD side and appear in the list of rejected
  objects. Due to the existing limitations in Active Directory, nested
  groups should only be assigned there.
</para>
</listitem>
<listitem>
	<para>
		If a global group <systemitem class="groupname">A</systemitem> is accepted as a member of another global
		group <systemitem class="groupname">B</systemitem> in &ucsUDM;, this membership does not appear in Active
		Directory because of the internal AD limitations in <systemitem class="osname">Windows 2000/2003</systemitem>.
		If group <systemitem class="groupname">A</systemitem>'s name is then changed, the group membership to group <systemitem class="groupname">B</systemitem> will be lost.
		Since <systemitem class="osname">Windows 2008</systemitem> this limitation no longer exists and thus global groups can also be nested in Active Directory.
</para>
</listitem>
</itemizedlist>
</section>
</section>

<section id="ad-connector:benutzer"><title>Users</title>
<para>
Users are synchronized like groups using the user name or using the AD
pre Windows 2000 name. The <emphasis>First name</emphasis>, <emphasis>Last name</emphasis>,
<emphasis>Primary group</emphasis> (in so far as present on the other side),
<emphasis>Organization</emphasis>, <emphasis>Description</emphasis>, <emphasis>Street</emphasis>, <emphasis>City</emphasis>,
<emphasis>Postal code</emphasis>, <emphasis>Windows home path</emphasis>, <emphasis>Windows login script</emphasis>,
<emphasis>Disabled</emphasis> and <emphasis>Account expiry date</emphasis> attributes are
transferred. Indirectly <emphasis>Password</emphasis>, <emphasis>Password expiry date</emphasis>
and <emphasis>Change password on next login</emphasis> are also
synchronized. <emphasis>Primary e-mail address</emphasis> and <emphasis>Telephone number</emphasis> are
prepared but commented out due to differing syntax in the mapping
configuration.
</para>
<para>
The <systemitem class="username">root</systemitem> and <systemitem class="username">Administrator</systemitem> users are exempted.
</para>

<section id="windows:user:Particularities"><title>Particularities</title>
<itemizedlist>
<listitem>
<para>Users are also identified using the name, so that for users
  created before the first synchronization on both sides, the same
  process applies as for groups as regards the position in LDAP.
</para>
</listitem>
<listitem>
<para>The synchronization of the password expiry date and the
  <emphasis>Change password on next login</emphasis> user option occurs on the
  UCS side on the Samba level alone. If a password change is initiated
  by &ucsUDM;, but the password changed in Active Directory, the
  expiration details for the Kerberos and POSIX passwords are not
  changed, so that the user must change his password again if he, for
  example, logs on to a thin client.
</para>
</listitem>
<listitem>
<para>In some cases, a user to be created under AD, for which the
  password has been rejected, is deleted from AD immediately after
  creation. The reasoning behind this is that AD created this
  user firstly and then deletes it immediately once the password is
  rejected. If these operations are transmitted to UCS, they are
  transmitted back to AD. If the user is re-entered on the AD side
  before the operation is transmitted back, it is deleted after the
  transmission. The occurrence of this process is dependent on the
  polling interval set for the connector.
</para>
</listitem>
<listitem>
<para>AD and UCS create new users in a specific primary group (usually
  <systemitem class="groupname">Domain Users</systemitem> or <systemitem class="groupname" lang="de">Domänen-Benutzer</systemitem>) depending on the
  presetting. During the first synchronization from UCS to AD the
  users are therefore always a member in this group.
  </para>
</listitem>
</itemizedlist>
</section>
</section>
</section>
</section>


<section id="windows:adtakeover">
  <title>Migrating an Active Directory domain to UCS using Univention AD Takeover</title>

  <section id="windows:adtakeover:intro">
	<title>Introduction</title>
	<para>
	  UCS supports the takeover of user, group and computer objects as well as Group Policy Objects
	  (GPOs) from a Microsoft Active Directory (AD) domain. Windows clients do not need to rejoin
	  the domain. The takeover is an interactive process consisting of three distinct phases:

	  <itemizedlist>
		<listitem><simpara>
		  Copying all objects from Active Directory to UCS
		</simpara></listitem>

		<listitem><simpara>
		  Copying of the group policy files from the AD server to UCS
		</simpara></listitem>

		<listitem><simpara>
		  Deactivation of the AD server and assignment of all FSMO roles to the UCS DC
		</simpara></listitem>
	  </itemizedlist>
	</para>

	<para>
	  The following requirements must be met for the takeover:

	  <itemizedlist>
		<listitem><simpara>
		  The UCS domain controller (&ucsMaster;) needs to be installed
		  with a unique hostname, not used in the AD domain.
		</simpara></listitem>

		<listitem><simpara>
		  The UCS domain controller needs to be installed with the same DNS domain name, NetBIOS
		  (pre Windows 2000) domain name and Kerberos realm as the AD domain. It is also recommended
		  to configure the same LDAP base DN.
		</simpara></listitem>

		<listitem><simpara>
		  The UCS domain controller needs to be installed with a unique IPv4 address in the same IP
		  subnet as the Active Directory domain controller that is used for the takeover.
		</simpara></listitem>
	  </itemizedlist>
	</para>

    <caution>
      <para>
        If the system is already a member of an Active Directory Domain, installing the
        <emphasis>Active Directory Takeover</emphasis> application removes this membership.
        Therefore, the installation of the <emphasis>Takeover</emphasis> application has to
        take place only shortly before the actual takeover of the AD domain.
      </para>
    </caution>

	<para>
	  The <emphasis>Active Directory Takeover</emphasis> application must be installed from the
	  Univention App Center for the migration. It must be installed on the system where the
	  Univention S4 Connector is running (see <xref linkend="windows:s4connector"/>, usually the
	  &ucsMaster;).
	</para>

  </section>

  <section id="windows:adtakeover:preparations">
	<title>Preparation</title>
	<para>
	  The following steps are strongly recommended before attempting the takeover:

	  <itemizedlist>
		<listitem><simpara>
		  A backup of the AD server(s) should be performed.
		</simpara></listitem>

		<listitem><simpara>
		  If user logins to the AD server are possible  (e.g. through domain logins or terminal
		  server sessions) it is recommended to deactivate them and to stop any services in the AD
		  domain, which deliver data, e.g. mail servers. This ensures that no data is lost in case
		  of a rollback to the original snapshot/backup.
		</simpara></listitem>

		<listitem><simpara>
		  It is recommended to set the same password for the <systemitem class="username">Administrator</systemitem>
		  account on the AD server as the corresponding account in the UCS domain. In case different
		  passwords are used, the password that was set last, will be the one that is finally valid
		  after the takeover process (timestamps are compared for this).
		</simpara></listitem>

		<listitem><simpara>
		  In a default installation the <systemitem class="username">Administrator</systemitem> account of the AD server
		  is deactivated. It should be activated in the local user management module.
		</simpara></listitem>

	  </itemizedlist>
	</para>

	<para>
	  The activation of the <systemitem class="username">Administrator</systemitem> account on the AD server is
	  recommended because this account has all the required privileges to copy the GPO SYSVOL
	  files. The activation can be achieved by means of the <guimenu>Active Directory Users and
	  Computers</guimenu> module or by running the following two commands:

	  <programlisting language="sh">
net user administrator /active:yes
net user administrator PASSWORD
	  </programlisting>
	</para>

  </section>

  <section id="windows:adtakeover:migrate">
	<title>Domain migration</title>
	<para>
	  The takeover must be initiated on the UCS domain controller that runs the Univention S4 Connector
	  (by default the &ucsMaster;). During the takeover process Samba must only run on this UCS
	  system. If other Samba domain controllers have been added to the UCS domain, they need to be
	  stopped! This is important to avoid data corruption by mixing directory data taken over from
	  Active Directory with Samba 4 directory data replicated from other UCS domain controllers.
	</para>

	<para>
	  Other Samba systems can be stopped by logging into each of the other UCS domain controllers as the
	  <systemitem class="username">root</systemitem>user and running

	  <programlisting language="sh">
/etc/init.d/samba4 stop
	  </programlisting>
	</para>

	<para>
	  After ensuring that only the Univention S4 Connector host runs Samba 4, the takeover process
	  can be started. If the UCS domain was installed initially with a UCS version before UCS 3.2,
	  the following &ucsUCRV; needs to be set first:

	  <programlisting language="sh">
ucr set connector/s4/mapping/group/grouptype=false
	  </programlisting>
	</para>

	<para>
	  The takeover is performed with the <guimenu>Active Directory Takeover</guimenu> &ucsUMC;
	  module. The IP address of the AD system must be specified under <guimenu>Name or address of
	  the Domain Controller</guimenu>. An account from the AD domain must be specified under
	  <guimenu>Active Directory Administrator account</guimenu> which is a member of the AD group
	  <systemitem class="groupname">Domain Admins</systemitem> (e.g., the <systemitem class="username">Administrator</systemitem>) and the
	  corresponding password entered under <guimenu>Active Directory Administrator
	  password</guimenu>.
	</para>

	<figure id="windows:ad:takeover1">
	  <title>First phase of domain migration</title>
	  <graphic scalefit="1" width="100%" align="center" fileref="illustrations44/takeover1-en.png"/>
	</figure>

	<para>
	  The module checks whether the AD domain controller can be accessed and displays the domain
	  data to be migrated.

	<figure id="windows:ad:takeover2">
	  <title>Overview of the data to be migrated</title>
	  <graphic scalefit="1" width="100%" align="center" fileref="illustrations44/takeover2-en.png"/>
	</figure>
	</para>

	<para>
	  When <guimenu>Next</guimenu> is clicked, the following steps are performed automatically.
	  Additional information is logged to <filename>/var/log/univention/ad-takeover.log</filename>
	  as well as to <filename>/var/log/univention/management-console-module-adtakeover.log</filename>.

	  <itemizedlist>
		<listitem><simpara>
		  Adjust the system time of the UCS system to the system time of the Active Directory domain
		  controller in case the UCS time is behind by more than three minutes.
		</simpara></listitem>

		<listitem><simpara>
		  Join the UCS domain controller into the Active Directory domain
		</simpara></listitem>

		<listitem><simpara>
		  Start Samba and the Univention S4 connector to replicate the Active Directory objects into
		  the UCS OpenLDAP directory
		</simpara></listitem>

		<listitem><simpara>
		  When "<emphasis>Well Known</emphasis>" account and group objects
		  (identified by their special RIDs) are synchronized into
		  the UCS OpenLDAP, a listener module running on each UCS system
		  sets a &ucsUCR; variable to locally to map the English name to the non-English AD name.
		  These variables are used to translate the English names used in the UCS configuration
		  files to the specific names used in Active Directory.
		  To give an example, if <systemitem class="groupname">Domain Admins</systemitem> has a different name in the AD,
		  then the &ucsUCR; variable <envar>groups/default/domainadmins</envar> is set to that
		  specific name (likewise for uses, e.g. <envar>users/default/administrator</envar>).
		</simpara></listitem>
	  </itemizedlist>
	</para>

	<para>
	  The UCS domain controller now contains all users, groups and computers of the Active Directory
	  domain. In the next step, the SYSVOL share is copied, in which among other things the group
	  policies are stored.
	</para>

	<para>
	  This phase requires to log onto the Active Directory domain controller as the
	  <systemitem class="username">Administrator</systemitem> (or the equivalent non-English name).
	  There a command needs to be started to copy the group
	  policy files from the Active Directory SYSVOL share to the UCS SYSVOL share.
	</para>

	<para>
	  The command to be run in shown in the UMC module. If it has been successfully run, it must be
	  confirmed with <guimenu>Next</guimenu>.

	  <figure id="windows:ad:sysvol">
		<title>Copying the SYSVOL share</title>
		<graphic scalefit="1" width="100%" align="center" fileref="illustrations44/takeover3-en.png"/>
	  </figure>

	  It may be necessary to install the required <command>robocopy</command> tool, which is part of the Windows Server
	  2003 Resource Kit Tools. Starting with Windows 2008 the tool is already installed.
	</para>

	<para>
        Note: The <parameter class="option">/mir</parameter> option of <command>robocopy</command> mirrors the specified source
	  directory to the destination directory. Please be aware that if you delete data in the
	  source directory and execute this command a second time, this data will also be deleted in
	  the destination directory.
	</para>

	<para>
	  After successful completion of this step, it is now necessary to shutdown all domain
	  controllers of the Active Directory domain. Then <guimenu>Next</guimenu> must be clicked in
	  the UMC module.

	  <figure id="windows:ad:shutdown">
		<title>Shutdown of the AD server(s)</title>
		<graphic scalefit="1" width="100%" align="center" fileref="illustrations44/takeover4-en.png"/>
	  </figure>
	</para>

	<para>
	  The following steps are now automatically performed:

	  <itemizedlist>
		<listitem><simpara>
		  Claiming all FSMO roles for the UCS domain controller. These describe different tasks that
		  a server can take on in an AD domain.
		</simpara></listitem>

		<listitem><simpara>
		  Register the name of the Active Directory domain controller as a DNS alias (see <xref
		  linkend="ip-config:CNAME-Record_Alias-Records"/>) for the UCS DNS server.
		</simpara></listitem>

		<listitem><simpara>
		  Configure the IP address of the Active Directory domain controller as a virtual Ethernet
		  interface
		</simpara></listitem>

		<listitem><simpara>
		  Perform some cleanup, e.g. removal of the AD domain controller account and related objects in
		  the Samba SAM account database.
		</simpara></listitem>

		<listitem><simpara>
		  Finally restart Samba and the DNS server
		</simpara></listitem>
	  </itemizedlist>
	</para>

  </section>

  <section id="windows:adtakeover:finalsteps">
	<title>Final steps of the takeover</title>
	<para>
	  Finally the following steps are required:

	  <itemizedlist>
		<listitem><simpara>
		  The domain function level of the migrated Active Directory domain needs to be checked by
		  running the following command:
		  </simpara>
		  <programlisting language="sh">
samba-tool domain level show
		  </programlisting>
		  <simpara>
		  In case this command returns the message <guimenu>ATTENTION: You run SAMBA 4 on a forest
		  function level lower than Windows 2000 (Native).</guimenu> the following commands should
		  be run to fix this:
		  </simpara>
		  <programlisting language="sh">
samba-tool domain level raise --forest-level=2003 --domain-level=2003
samba-tool dbcheck --fix --yes
		  </programlisting>
		</listitem>

		<listitem><simpara>
		  In case there has been more than one Active Directory domain controller in the original
		  Active Directory domain, all the host accounts of the other domain controllers must be
		  removed in the computers management module of the Univention Management Console.
		  In addition their accounts must be removed from the Samba SAM database. This may be done
		  by logging on to a migrated Windows client as member of the group
		  <systemitem class="groupname">Domain Admins</systemitem> and running the tool
		  <guimenu>Active Directory Users and Computers</guimenu>.
		</simpara></listitem>

		<listitem><simpara>
		  If more than one UCS domain controller with Samba domain controller has been installed,
		  these servers need to be re-joined.
		</simpara></listitem>

		<listitem><simpara>
		  All Windows clients need to be rebooted.
		</simpara></listitem>
	  </itemizedlist>
	</para>
  </section>

  <section id="windows:adtakeover:tests">
	<title>Tests</title>
	<para>
	  It is recommended to perform thorough tests with Windows client systems, e.g.

	  <itemizedlist>
		<listitem><simpara>
		  Login to a migrated client as a migrated user
		</simpara></listitem>

		<listitem><simpara>
		  Login to a migrated client as the Administrator
		</simpara></listitem>

		<listitem><simpara>
		  Testing group policies
		</simpara></listitem>

		<listitem><simpara>
		  Join of a new Windows client
		</simpara></listitem>

		<listitem><simpara>
		  Creation of a new UCS user and login to a Windows client
		</simpara></listitem>
	  </itemizedlist>
	</para>
  </section>

</section>

<section id="windows_trust">
  <title>Trust relationships</title>
  <para>
	Trust relationships between domains make it possible for users from one domain to log on to
	computers from another domain.
  </para>

  <para>
	In general, Windows trust relations can be unidirectional or bidirectional.
	Technically a bidirectional trust is simply realized as two unidirectional
	trusts, one in each direction.
  </para>

  <para>
	The terminology of unidirectional trusts depends on the perspective
	of either the trusting or trusted domain: From the perspective of the
	trusting domain, the trust is called <emphasis>outgoing</emphasis>.
	From the perspective of the trusted domain, the trust is called
	<emphasis>incoming</emphasis>.
  </para>

  <para>
	In UCS, outgoing trust (UCS trusts Windows) is not supported currently.
	As a consequence, bidirectional trust is not supported either.
  </para>

  <para>
	When setting up and using the trust relationship the domain controllers of both domains must be
	able to reach each other over the network and identify each other via DNS.
	At least the fully qualified DNS names of the domain controllers of
	the respective remote domain must be resolvable to allow communication
	between both domains to work. This can be achieved by configuring
	conditional DNS forwarding in both domains.
  </para>

  <para>
	  The following example assumes, that the UCS Samba/AD DC Master
	  <systemitem class="fqdomainname">master.ucsdom.example</systemitem> has the IP address
	  <systemitem class="ipaddress">192.0.2.10</systemitem> and that the
	  Active Directory domain controller
	  <systemitem class="fqdomainname">dc1.addom.example</systemitem> of the remote domain has the IP address
	  <systemitem class="ipaddress">192.0.2.20</systemitem>.
  </para>

  <para>
	  On the UCS side the conditional forwarding of DNS queries can be
	  set up as <systemitem class="username">root</systemitem> with the following commands:
  </para>

  <programlisting language="sh"><![CDATA[
cat >> /etc/bind/local.conf.samba4 <<%EOR

zone "addom.example" {
type forward;
forwarders { 192.0.2.20; };
};
%EOR
service bind9 restart
]]>
  </programlisting>

  <para>
	  The success can be checked by running <command>host dc1.addom.example</command>.
  </para>


  <para>
	  In addition, it may be useful to create a static entry for the
	  domain controller of the remote Active Directory domain in the
	  file <filename>/etc/hosts</filename>:
  </para>

  <programlisting language="sh">
ucr set hosts/static/192.0.2.20=dc1.addom.example
  </programlisting>

  <para>
	  On a Windows AD DC, a so-called <emphasis>conditional forwarding</emphasis>
	  can be set up for the UCS domain via the <guilabel>DNS server console</guilabel>.
  </para>

  <para>
	  After this preliminary work, the trust itself can be established
	  directly from the command line of the UCS Samba/AD DC.
  </para>

  <para>
	  Trust relationships can only be configured on domain controllers
	  but they affect the whole domain.
  </para>

  <para>
	  In Samba/AD domain the trust relationship can be configured easily
	  on the command line using the tool <command>samba-tool</command>:
  </para>

  <programlisting language="sh">
samba-tool domain trust create addom.example \
           -k no -UADDOM\\Administrator%ADAdminPassword \
           --type=external --direction=incoming
  </programlisting>

  <para>
	The trust can be checked using the following commands:
  </para>

  <programlisting language="sh">
samba-tool domain trust list
wbinfo --ping-dc –domain=addom.example
wbinfo --check-secret –domain=addom.example
  </programlisting>

  <para>
	After the setup, a UCS user should be able to log on to systems of
	the remote Active Directory domain. Users must either use the format
	<systemitem class="username">UCSDOM\username</systemitem> as login name or their Kerberos
	principal in the notation <systemitem class="username">username@ucsdom.example</systemitem>.
  </para>
</section>

</chapter>
